{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Weather","useState","input","setInput","city","setCity","desc","setDesc","temp","setTemp","type","className","placeholder","onChange","event","currentTarget","value","onClick","fetch","then","response","json","data","catch","err","alert","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA0CeA,MApCf,WACE,IACA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAkBA,OACE,gCACE,uBAAOC,KAAK,OAAOC,UAAU,aAAaC,YAAY,cAAcC,SANvD,SAACC,GAChBX,EAASW,EAAMC,cAAcC,UAM3B,uBAAON,KAAK,SAASM,MAAM,SAASC,QAAS,WAlB/CC,MAAM,qDAAuDhB,EAAvD,wDACLiB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAAG,GACJjB,EAAQH,GACRO,EAAQa,EAAI,KAAJ,KAAwB,UAChCf,EAAQe,EAAI,QAAY,GAAhB,gBAGTC,OAAM,SAAAC,GAAG,OAAIC,MAAM,2BAWlB,sBAAKd,UAAU,UAAf,UACE,mBAAGe,GAAG,SAAUtB,EAAK,sBACrB,mBAAGO,UAAU,SAAUL,EAAK,sBAC5B,mBAAGK,UAAU,SAAUH,EAAK,6BCtBrBmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.969f84dd.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { ChangeEvent } from 'react';\nimport './App.css';\n\n\n\nfunction Weather() {\n  const key = \"cde24c243c012a396950f571bcdd4836\";\n  const [input, setInput] = useState('');\n  const [city, setCity] = useState('');\n  const [desc, setDesc] = useState('');\n  const [temp, setTemp] = useState('');\n\n  function handleSubmit(){\n    fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\" + input + \"&units=metric&appid=\" + key)\n    .then((response) => response.json())\n    .then(data => {\n      setCity(input);\n      setTemp(data['main']['temp']  + \" Â°C\");\n      setDesc(data['weather'][0]['description']);\n    })\n\n    .catch(err => alert(\"Invalid City Name\"))\n  }\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setInput(event.currentTarget.value);\n  };\n\n  return(\n    <div>\n      <input type=\"text\" className=\"inputValue\" placeholder=\"Search city\" onChange={onChange} />\n      <input type=\"submit\" value=\"Submit\" onClick={() => handleSubmit()} />\n      <div className=\"display\">\n        <p id=\"name\" />{city}<p/>\n        <p className=\"desc\" />{desc}<p/>\n        <p className=\"temp\" />{temp}<p/>\n      </div>\n    </div>\n  );\n}\n\nexport default Weather;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}